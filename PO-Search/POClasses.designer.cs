#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PO_Search
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EIWarehouse")]
	public partial class POClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPOLineFact(POLineFact instance);
    partial void UpdatePOLineFact(POLineFact instance);
    partial void DeletePOLineFact(POLineFact instance);
    partial void InsertAssembly(Assembly instance);
    partial void UpdateAssembly(Assembly instance);
    partial void DeleteAssembly(Assembly instance);
    partial void InsertShipping(Shipping instance);
    partial void UpdateShipping(Shipping instance);
    partial void DeleteShipping(Shipping instance);
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertDimDate(DimDate instance);
    partial void UpdateDimDate(DimDate instance);
    partial void DeleteDimDate(DimDate instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    #endregion
		
		public POClassesDataContext() : 
				base(global::PO_Search.Properties.Settings.Default.EIWarehouseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public POClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public POClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public POClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public POClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<POLineFact> POLineFacts
		{
			get
			{
				return this.GetTable<POLineFact>();
			}
		}
		
		public System.Data.Linq.Table<Assembly> Assemblies
		{
			get
			{
				return this.GetTable<Assembly>();
			}
		}
		
		public System.Data.Linq.Table<Shipping> Shippings
		{
			get
			{
				return this.GetTable<Shipping>();
			}
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<DimDate> DimDates
		{
			get
			{
				return this.GetTable<DimDate>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee
	{
		
		private int _id;
		
		private string _fName;
		
		private string _lName;
		
		private System.Nullable<int> _positionId;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private System.Nullable<System.DateTime> _startDate;
		
		private System.Nullable<System.DateTime> _endDate;
		
		private System.Nullable<int> _classificationId;
		
		private string _location;
		
		public employee()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fName", DbType="VarChar(24)")]
		public string fName
		{
			get
			{
				return this._fName;
			}
			set
			{
				if ((this._fName != value))
				{
					this._fName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lName", DbType="VarChar(24)")]
		public string lName
		{
			get
			{
				return this._lName;
			}
			set
			{
				if ((this._lName != value))
				{
					this._lName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_positionId", DbType="Int")]
		public System.Nullable<int> positionId
		{
			get
			{
				return this._positionId;
			}
			set
			{
				if ((this._positionId != value))
				{
					this._positionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this._birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this._startDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this._endDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classificationId", DbType="Int")]
		public System.Nullable<int> classificationId
		{
			get
			{
				return this._classificationId;
			}
			set
			{
				if ((this._classificationId != value))
				{
					this._classificationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="Char(24)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this._location = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POLineFact")]
	public partial class POLineFact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _PO;
		
		private short _Line;
		
		private string _PartNumber;
		
		private string _PartDescription;
		
		private string _VendorPartNumber;
		
		private int _DueDate;
		
		private int _OrderDate;
		
		private int _InvoiceDate;
		
		private System.Nullable<byte> _RelNum;
		
		private string _RevNum;
		
		private string _IUM;
		
		private string _Manufacturer;
		
		private string _TranType;
		
		private System.Nullable<decimal> _UnitCost;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _ExtendedCost;
		
		private System.Nullable<decimal> _InvoiceAmt;
		
		private System.Nullable<decimal> _InvoiceQuantity;
		
		private System.Nullable<bool> _Paid;
		
		private System.Nullable<bool> _Closed;
		
		private string _Job;
		
		private int _WBS;
		
		private System.Nullable<int> _JobSeq;
		
		private System.Nullable<short> _ClassID;
		
		private string _Comment;
		
		private int _Vendor;
		
		private int _Buyer;
		
		private string _Company;
		
		private System.Nullable<bool> _IsAnRFQ;
		
		private string _CurrencyCode;
		
		private string _CurrencyChar;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private System.Nullable<char> _CostPerCode;
		
		private int _ShipVia;
		
		private int _ShipTo;
		
		private short _Invoices;
		
		private EntityRef<Assembly> _Assembly;
		
		private EntityRef<Shipping> _Shipping;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Vendor> _Vendor1;
		
		private EntityRef<DimDate> _DimDate;
		
		private EntityRef<DimDate> _DimDate1;
		
		private EntityRef<DimDate> _DimDate2;
		
		private EntityRef<Address> _Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPOChanging(long value);
    partial void OnPOChanged();
    partial void OnLineChanging(short value);
    partial void OnLineChanged();
    partial void OnPartNumberChanging(string value);
    partial void OnPartNumberChanged();
    partial void OnPartDescriptionChanging(string value);
    partial void OnPartDescriptionChanged();
    partial void OnVendorPartNumberChanging(string value);
    partial void OnVendorPartNumberChanged();
    partial void OnDueDateChanging(int value);
    partial void OnDueDateChanged();
    partial void OnOrderDateChanging(int value);
    partial void OnOrderDateChanged();
    partial void OnInvoiceDateChanging(int value);
    partial void OnInvoiceDateChanged();
    partial void OnRelNumChanging(System.Nullable<byte> value);
    partial void OnRelNumChanged();
    partial void OnRevNumChanging(string value);
    partial void OnRevNumChanged();
    partial void OnIUMChanging(string value);
    partial void OnIUMChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnTranTypeChanging(string value);
    partial void OnTranTypeChanged();
    partial void OnUnitCostChanging(System.Nullable<decimal> value);
    partial void OnUnitCostChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnExtendedCostChanging(System.Nullable<decimal> value);
    partial void OnExtendedCostChanged();
    partial void OnInvoiceAmtChanging(System.Nullable<decimal> value);
    partial void OnInvoiceAmtChanged();
    partial void OnInvoiceQuantityChanging(System.Nullable<decimal> value);
    partial void OnInvoiceQuantityChanged();
    partial void OnPaidChanging(System.Nullable<bool> value);
    partial void OnPaidChanged();
    partial void OnClosedChanging(System.Nullable<bool> value);
    partial void OnClosedChanged();
    partial void OnJobChanging(string value);
    partial void OnJobChanged();
    partial void OnWBSChanging(int value);
    partial void OnWBSChanged();
    partial void OnJobSeqChanging(System.Nullable<int> value);
    partial void OnJobSeqChanged();
    partial void OnClassIDChanging(System.Nullable<short> value);
    partial void OnClassIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnVendorChanging(int value);
    partial void OnVendorChanged();
    partial void OnBuyerChanging(int value);
    partial void OnBuyerChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnIsAnRFQChanging(System.Nullable<bool> value);
    partial void OnIsAnRFQChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnCurrencyCharChanging(string value);
    partial void OnCurrencyCharChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnCostPerCodeChanging(System.Nullable<char> value);
    partial void OnCostPerCodeChanged();
    partial void OnShipViaChanging(int value);
    partial void OnShipViaChanged();
    partial void OnShipToChanging(int value);
    partial void OnShipToChanged();
    partial void OnInvoicesChanging(short value);
    partial void OnInvoicesChanged();
    #endregion
		
		public POLineFact()
		{
			this._Assembly = default(EntityRef<Assembly>);
			this._Shipping = default(EntityRef<Shipping>);
			this._Class = default(EntityRef<Class>);
			this._Vendor1 = default(EntityRef<Vendor>);
			this._DimDate = default(EntityRef<DimDate>);
			this._DimDate1 = default(EntityRef<DimDate>);
			this._DimDate2 = default(EntityRef<DimDate>);
			this._Address = default(EntityRef<Address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PO", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long PO
		{
			get
			{
				return this._PO;
			}
			set
			{
				if ((this._PO != value))
				{
					this.OnPOChanging(value);
					this.SendPropertyChanging();
					this._PO = value;
					this.SendPropertyChanged("PO");
					this.OnPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber", DbType="VarChar(64)")]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this.OnPartNumberChanging(value);
					this.SendPropertyChanging();
					this._PartNumber = value;
					this.SendPropertyChanged("PartNumber");
					this.OnPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartDescription", DbType="VarChar(400)")]
		public string PartDescription
		{
			get
			{
				return this._PartDescription;
			}
			set
			{
				if ((this._PartDescription != value))
				{
					this.OnPartDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PartDescription = value;
					this.SendPropertyChanged("PartDescription");
					this.OnPartDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorPartNumber", DbType="VarChar(64)")]
		public string VendorPartNumber
		{
			get
			{
				return this._VendorPartNumber;
			}
			set
			{
				if ((this._VendorPartNumber != value))
				{
					this.OnVendorPartNumberChanging(value);
					this.SendPropertyChanging();
					this._VendorPartNumber = value;
					this.SendPropertyChanged("VendorPartNumber");
					this.OnVendorPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="Int NOT NULL")]
		public int DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					if (this._DimDate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="Int NOT NULL")]
		public int OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					if (this._DimDate2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Int NOT NULL")]
		public int InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					if (this._DimDate1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelNum", DbType="TinyInt")]
		public System.Nullable<byte> RelNum
		{
			get
			{
				return this._RelNum;
			}
			set
			{
				if ((this._RelNum != value))
				{
					this.OnRelNumChanging(value);
					this.SendPropertyChanging();
					this._RelNum = value;
					this.SendPropertyChanged("RelNum");
					this.OnRelNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevNum", DbType="VarChar(20)")]
		public string RevNum
		{
			get
			{
				return this._RevNum;
			}
			set
			{
				if ((this._RevNum != value))
				{
					this.OnRevNumChanging(value);
					this.SendPropertyChanging();
					this._RevNum = value;
					this.SendPropertyChanged("RevNum");
					this.OnRevNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IUM", DbType="VarChar(3)")]
		public string IUM
		{
			get
			{
				return this._IUM;
			}
			set
			{
				if ((this._IUM != value))
				{
					this.OnIUMChanging(value);
					this.SendPropertyChanging();
					this._IUM = value;
					this.SendPropertyChanged("IUM");
					this.OnIUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(64)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TranType", DbType="VarChar(10)")]
		public string TranType
		{
			get
			{
				return this._TranType;
			}
			set
			{
				if ((this._TranType != value))
				{
					this.OnTranTypeChanging(value);
					this.SendPropertyChanging();
					this._TranType = value;
					this.SendPropertyChanged("TranType");
					this.OnTranTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> UnitCost
		{
			get
			{
				return this._UnitCost;
			}
			set
			{
				if ((this._UnitCost != value))
				{
					this.OnUnitCostChanging(value);
					this.SendPropertyChanging();
					this._UnitCost = value;
					this.SendPropertyChanged("UnitCost");
					this.OnUnitCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedCost", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ExtendedCost
		{
			get
			{
				return this._ExtendedCost;
			}
			set
			{
				if ((this._ExtendedCost != value))
				{
					this.OnExtendedCostChanging(value);
					this.SendPropertyChanging();
					this._ExtendedCost = value;
					this.SendPropertyChanged("ExtendedCost");
					this.OnExtendedCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAmt", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvoiceAmt
		{
			get
			{
				return this._InvoiceAmt;
			}
			set
			{
				if ((this._InvoiceAmt != value))
				{
					this.OnInvoiceAmtChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAmt = value;
					this.SendPropertyChanged("InvoiceAmt");
					this.OnInvoiceAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceQuantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvoiceQuantity
		{
			get
			{
				return this._InvoiceQuantity;
			}
			set
			{
				if ((this._InvoiceQuantity != value))
				{
					this.OnInvoiceQuantityChanging(value);
					this.SendPropertyChanging();
					this._InvoiceQuantity = value;
					this.SendPropertyChanged("InvoiceQuantity");
					this.OnInvoiceQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit")]
		public System.Nullable<bool> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Closed", DbType="Bit")]
		public System.Nullable<bool> Closed
		{
			get
			{
				return this._Closed;
			}
			set
			{
				if ((this._Closed != value))
				{
					this.OnClosedChanging(value);
					this.SendPropertyChanging();
					this._Closed = value;
					this.SendPropertyChanged("Closed");
					this.OnClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					if (this._Assembly.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobChanging(value);
					this.SendPropertyChanging();
					this._Job = value;
					this.SendPropertyChanged("Job");
					this.OnJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WBS", DbType="Int NOT NULL")]
		public int WBS
		{
			get
			{
				return this._WBS;
			}
			set
			{
				if ((this._WBS != value))
				{
					if (this._Assembly.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWBSChanging(value);
					this.SendPropertyChanging();
					this._WBS = value;
					this.SendPropertyChanged("WBS");
					this.OnWBSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobSeq", DbType="Int")]
		public System.Nullable<int> JobSeq
		{
			get
			{
				return this._JobSeq;
			}
			set
			{
				if ((this._JobSeq != value))
				{
					this.OnJobSeqChanging(value);
					this.SendPropertyChanging();
					this._JobSeq = value;
					this.SendPropertyChanged("JobSeq");
					this.OnJobSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="SmallInt")]
		public System.Nullable<short> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(240)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vendor", DbType="Int NOT NULL")]
		public int Vendor
		{
			get
			{
				return this._Vendor;
			}
			set
			{
				if ((this._Vendor != value))
				{
					if (this._Vendor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorChanging(value);
					this.SendPropertyChanging();
					this._Vendor = value;
					this.SendPropertyChanged("Vendor");
					this.OnVendorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buyer", DbType="Int NOT NULL")]
		public int Buyer
		{
			get
			{
				return this._Buyer;
			}
			set
			{
				if ((this._Buyer != value))
				{
					this.OnBuyerChanging(value);
					this.SendPropertyChanging();
					this._Buyer = value;
					this.SendPropertyChanged("Buyer");
					this.OnBuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(10)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnRFQ", DbType="Bit")]
		public System.Nullable<bool> IsAnRFQ
		{
			get
			{
				return this._IsAnRFQ;
			}
			set
			{
				if ((this._IsAnRFQ != value))
				{
					this.OnIsAnRFQChanging(value);
					this.SendPropertyChanging();
					this._IsAnRFQ = value;
					this.SendPropertyChanged("IsAnRFQ");
					this.OnIsAnRFQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="VarChar(4)")]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyChar", DbType="VarChar(4)")]
		public string CurrencyChar
		{
			get
			{
				return this._CurrencyChar;
			}
			set
			{
				if ((this._CurrencyChar != value))
				{
					this.OnCurrencyCharChanging(value);
					this.SendPropertyChanging();
					this._CurrencyChar = value;
					this.SendPropertyChanged("CurrencyChar");
					this.OnCurrencyCharChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPerCode", DbType="Char(1)")]
		public System.Nullable<char> CostPerCode
		{
			get
			{
				return this._CostPerCode;
			}
			set
			{
				if ((this._CostPerCode != value))
				{
					this.OnCostPerCodeChanging(value);
					this.SendPropertyChanging();
					this._CostPerCode = value;
					this.SendPropertyChanged("CostPerCode");
					this.OnCostPerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipVia", DbType="Int NOT NULL")]
		public int ShipVia
		{
			get
			{
				return this._ShipVia;
			}
			set
			{
				if ((this._ShipVia != value))
				{
					if (this._Shipping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipViaChanging(value);
					this.SendPropertyChanging();
					this._ShipVia = value;
					this.SendPropertyChanged("ShipVia");
					this.OnShipViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipTo", DbType="Int NOT NULL")]
		public int ShipTo
		{
			get
			{
				return this._ShipTo;
			}
			set
			{
				if ((this._ShipTo != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipToChanging(value);
					this.SendPropertyChanging();
					this._ShipTo = value;
					this.SendPropertyChanged("ShipTo");
					this.OnShipToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoices", DbType="SmallInt NOT NULL")]
		public short Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				if ((this._Invoices != value))
				{
					this.OnInvoicesChanging(value);
					this.SendPropertyChanging();
					this._Invoices = value;
					this.SendPropertyChanged("Invoices");
					this.OnInvoicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assembly_POLineFact", Storage="_Assembly", ThisKey="Job,WBS", OtherKey="JobNum,WBS", IsForeignKey=true)]
		public Assembly Assembly
		{
			get
			{
				return this._Assembly.Entity;
			}
			set
			{
				Assembly previousValue = this._Assembly.Entity;
				if (((previousValue != value) 
							|| (this._Assembly.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Assembly.Entity = null;
						previousValue.POLineFacts.Remove(this);
					}
					this._Assembly.Entity = value;
					if ((value != null))
					{
						value.POLineFacts.Add(this);
						this._Job = value.JobNum;
						this._WBS = value.WBS;
					}
					else
					{
						this._Job = default(string);
						this._WBS = default(int);
					}
					this.SendPropertyChanged("Assembly");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipping_POLineFact", Storage="_Shipping", ThisKey="ShipVia", OtherKey="Id", IsForeignKey=true)]
		public Shipping Shipping
		{
			get
			{
				return this._Shipping.Entity;
			}
			set
			{
				Shipping previousValue = this._Shipping.Entity;
				if (((previousValue != value) 
							|| (this._Shipping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipping.Entity = null;
						previousValue.POLineFacts.Remove(this);
					}
					this._Shipping.Entity = value;
					if ((value != null))
					{
						value.POLineFacts.Add(this);
						this._ShipVia = value.Id;
					}
					else
					{
						this._ShipVia = default(int);
					}
					this.SendPropertyChanged("Shipping");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_POLineFact", Storage="_Class", ThisKey="ClassID", OtherKey="Id", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.POLineFacts.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.POLineFacts.Add(this);
						this._ClassID = value.Id;
					}
					else
					{
						this._ClassID = default(Nullable<short>);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_POLineFact", Storage="_Vendor1", ThisKey="Vendor", OtherKey="VendorKey", IsForeignKey=true)]
		public Vendor Vendor1
		{
			get
			{
				return this._Vendor1.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor1.Entity;
				if (((previousValue != value) 
							|| (this._Vendor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor1.Entity = null;
						previousValue.POLineFacts.Remove(this);
					}
					this._Vendor1.Entity = value;
					if ((value != null))
					{
						value.POLineFacts.Add(this);
						this._Vendor = value.VendorKey;
					}
					else
					{
						this._Vendor = default(int);
					}
					this.SendPropertyChanged("Vendor1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimDate_POLineFact", Storage="_DimDate", ThisKey="DueDate", OtherKey="DateKey", IsForeignKey=true)]
		public DimDate DimDate
		{
			get
			{
				return this._DimDate.Entity;
			}
			set
			{
				DimDate previousValue = this._DimDate.Entity;
				if (((previousValue != value) 
							|| (this._DimDate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DimDate.Entity = null;
						previousValue.POLineFacts.Remove(this);
					}
					this._DimDate.Entity = value;
					if ((value != null))
					{
						value.POLineFacts.Add(this);
						this._DueDate = value.DateKey;
					}
					else
					{
						this._DueDate = default(int);
					}
					this.SendPropertyChanged("DimDate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimDate_POLineFact1", Storage="_DimDate1", ThisKey="InvoiceDate", OtherKey="DateKey", IsForeignKey=true)]
		public DimDate DimDate1
		{
			get
			{
				return this._DimDate1.Entity;
			}
			set
			{
				DimDate previousValue = this._DimDate1.Entity;
				if (((previousValue != value) 
							|| (this._DimDate1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DimDate1.Entity = null;
						previousValue.POLineFacts1.Remove(this);
					}
					this._DimDate1.Entity = value;
					if ((value != null))
					{
						value.POLineFacts1.Add(this);
						this._InvoiceDate = value.DateKey;
					}
					else
					{
						this._InvoiceDate = default(int);
					}
					this.SendPropertyChanged("DimDate1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimDate_POLineFact2", Storage="_DimDate2", ThisKey="OrderDate", OtherKey="DateKey", IsForeignKey=true)]
		public DimDate DimDate2
		{
			get
			{
				return this._DimDate2.Entity;
			}
			set
			{
				DimDate previousValue = this._DimDate2.Entity;
				if (((previousValue != value) 
							|| (this._DimDate2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DimDate2.Entity = null;
						previousValue.POLineFacts2.Remove(this);
					}
					this._DimDate2.Entity = value;
					if ((value != null))
					{
						value.POLineFacts2.Add(this);
						this._OrderDate = value.DateKey;
					}
					else
					{
						this._OrderDate = default(int);
					}
					this.SendPropertyChanged("DimDate2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_POLineFact", Storage="_Address", ThisKey="ShipTo", OtherKey="Id", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.POLineFacts.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.POLineFacts.Add(this);
						this._ShipTo = value.Id;
					}
					else
					{
						this._ShipTo = default(int);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Assembly]")]
	public partial class Assembly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JobNum;
		
		private int _WBS;
		
		private EntitySet<POLineFact> _POLineFacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobNumChanging(string value);
    partial void OnJobNumChanged();
    partial void OnWBSChanging(int value);
    partial void OnWBSChanged();
    #endregion
		
		public Assembly()
		{
			this._POLineFacts = new EntitySet<POLineFact>(new Action<POLineFact>(this.attach_POLineFacts), new Action<POLineFact>(this.detach_POLineFacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobNum", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JobNum
		{
			get
			{
				return this._JobNum;
			}
			set
			{
				if ((this._JobNum != value))
				{
					this.OnJobNumChanging(value);
					this.SendPropertyChanging();
					this._JobNum = value;
					this.SendPropertyChanged("JobNum");
					this.OnJobNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WBS", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WBS
		{
			get
			{
				return this._WBS;
			}
			set
			{
				if ((this._WBS != value))
				{
					this.OnWBSChanging(value);
					this.SendPropertyChanging();
					this._WBS = value;
					this.SendPropertyChanged("WBS");
					this.OnWBSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Assembly_POLineFact", Storage="_POLineFacts", ThisKey="JobNum,WBS", OtherKey="Job,WBS")]
		public EntitySet<POLineFact> POLineFacts
		{
			get
			{
				return this._POLineFacts;
			}
			set
			{
				this._POLineFacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.Assembly = this;
		}
		
		private void detach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.Assembly = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shipping")]
	public partial class Shipping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private EntitySet<POLineFact> _POLineFacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public Shipping()
		{
			this._POLineFacts = new EntitySet<POLineFact>(new Action<POLineFact>(this.attach_POLineFacts), new Action<POLineFact>(this.detach_POLineFacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipping_POLineFact", Storage="_POLineFacts", ThisKey="Id", OtherKey="ShipVia")]
		public EntitySet<POLineFact> POLineFacts
		{
			get
			{
				return this._POLineFacts;
			}
			set
			{
				this._POLineFacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.Shipping = this;
		}
		
		private void detach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.Shipping = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Id;
		
		private string _Class1;
		
		private string _Comment;
		
		private EntitySet<POLineFact> _POLineFacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(short value);
    partial void OnIdChanged();
    partial void OnClass1Changing(string value);
    partial void OnClass1Changed();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Class()
		{
			this._POLineFacts = new EntitySet<POLineFact>(new Action<POLineFact>(this.attach_POLineFacts), new Action<POLineFact>(this.detach_POLineFacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Class", Storage="_Class1", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string Class1
		{
			get
			{
				return this._Class1;
			}
			set
			{
				if ((this._Class1 != value))
				{
					this.OnClass1Changing(value);
					this.SendPropertyChanging();
					this._Class1 = value;
					this.SendPropertyChanged("Class1");
					this.OnClass1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(120)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_POLineFact", Storage="_POLineFacts", ThisKey="Id", OtherKey="ClassID")]
		public EntitySet<POLineFact> POLineFacts
		{
			get
			{
				return this._POLineFacts;
			}
			set
			{
				this._POLineFacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendor")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VendorKey;
		
		private string _VendorPurPoint;
		
		private string _VendorName;
		
		private System.Nullable<int> _VendorNum;
		
		private string _VendorAddr1;
		
		private string _VendorAddr2;
		
		private string _VendorAddr3;
		
		private string _VendorCity;
		
		private string _VendorState;
		
		private string _VendorZip;
		
		private string _VendorCountry;
		
		private string _VendorPhone;
		
		private string _VendorFax;
		
		private string _VendorAcct;
		
		private string _VendorContact;
		
		private System.Nullable<bool> _VendorCntInactive;
		
		private string _VendorRating;
		
		private EntitySet<POLineFact> _POLineFacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVendorKeyChanging(int value);
    partial void OnVendorKeyChanged();
    partial void OnVendorPurPointChanging(string value);
    partial void OnVendorPurPointChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnVendorNumChanging(System.Nullable<int> value);
    partial void OnVendorNumChanged();
    partial void OnVendorAddr1Changing(string value);
    partial void OnVendorAddr1Changed();
    partial void OnVendorAddr2Changing(string value);
    partial void OnVendorAddr2Changed();
    partial void OnVendorAddr3Changing(string value);
    partial void OnVendorAddr3Changed();
    partial void OnVendorCityChanging(string value);
    partial void OnVendorCityChanged();
    partial void OnVendorStateChanging(string value);
    partial void OnVendorStateChanged();
    partial void OnVendorZipChanging(string value);
    partial void OnVendorZipChanged();
    partial void OnVendorCountryChanging(string value);
    partial void OnVendorCountryChanged();
    partial void OnVendorPhoneChanging(string value);
    partial void OnVendorPhoneChanged();
    partial void OnVendorFaxChanging(string value);
    partial void OnVendorFaxChanged();
    partial void OnVendorAcctChanging(string value);
    partial void OnVendorAcctChanged();
    partial void OnVendorContactChanging(string value);
    partial void OnVendorContactChanged();
    partial void OnVendorCntInactiveChanging(System.Nullable<bool> value);
    partial void OnVendorCntInactiveChanged();
    partial void OnVendorRatingChanging(string value);
    partial void OnVendorRatingChanged();
    #endregion
		
		public Vendor()
		{
			this._POLineFacts = new EntitySet<POLineFact>(new Action<POLineFact>(this.attach_POLineFacts), new Action<POLineFact>(this.detach_POLineFacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VendorKey
		{
			get
			{
				return this._VendorKey;
			}
			set
			{
				if ((this._VendorKey != value))
				{
					this.OnVendorKeyChanging(value);
					this.SendPropertyChanging();
					this._VendorKey = value;
					this.SendPropertyChanged("VendorKey");
					this.OnVendorKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorPurPoint", DbType="VarChar(4)")]
		public string VendorPurPoint
		{
			get
			{
				return this._VendorPurPoint;
			}
			set
			{
				if ((this._VendorPurPoint != value))
				{
					this.OnVendorPurPointChanging(value);
					this.SendPropertyChanging();
					this._VendorPurPoint = value;
					this.SendPropertyChanged("VendorPurPoint");
					this.OnVendorPurPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorNum", DbType="Int")]
		public System.Nullable<int> VendorNum
		{
			get
			{
				return this._VendorNum;
			}
			set
			{
				if ((this._VendorNum != value))
				{
					this.OnVendorNumChanging(value);
					this.SendPropertyChanging();
					this._VendorNum = value;
					this.SendPropertyChanged("VendorNum");
					this.OnVendorNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorAddr1", DbType="VarChar(70)")]
		public string VendorAddr1
		{
			get
			{
				return this._VendorAddr1;
			}
			set
			{
				if ((this._VendorAddr1 != value))
				{
					this.OnVendorAddr1Changing(value);
					this.SendPropertyChanging();
					this._VendorAddr1 = value;
					this.SendPropertyChanged("VendorAddr1");
					this.OnVendorAddr1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorAddr2", DbType="VarChar(70)")]
		public string VendorAddr2
		{
			get
			{
				return this._VendorAddr2;
			}
			set
			{
				if ((this._VendorAddr2 != value))
				{
					this.OnVendorAddr2Changing(value);
					this.SendPropertyChanging();
					this._VendorAddr2 = value;
					this.SendPropertyChanged("VendorAddr2");
					this.OnVendorAddr2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorAddr3", DbType="VarChar(70)")]
		public string VendorAddr3
		{
			get
			{
				return this._VendorAddr3;
			}
			set
			{
				if ((this._VendorAddr3 != value))
				{
					this.OnVendorAddr3Changing(value);
					this.SendPropertyChanging();
					this._VendorAddr3 = value;
					this.SendPropertyChanged("VendorAddr3");
					this.OnVendorAddr3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorCity", DbType="VarChar(60)")]
		public string VendorCity
		{
			get
			{
				return this._VendorCity;
			}
			set
			{
				if ((this._VendorCity != value))
				{
					this.OnVendorCityChanging(value);
					this.SendPropertyChanging();
					this._VendorCity = value;
					this.SendPropertyChanged("VendorCity");
					this.OnVendorCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorState", DbType="VarChar(32)")]
		public string VendorState
		{
			get
			{
				return this._VendorState;
			}
			set
			{
				if ((this._VendorState != value))
				{
					this.OnVendorStateChanging(value);
					this.SendPropertyChanging();
					this._VendorState = value;
					this.SendPropertyChanged("VendorState");
					this.OnVendorStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorZip", DbType="VarChar(11)")]
		public string VendorZip
		{
			get
			{
				return this._VendorZip;
			}
			set
			{
				if ((this._VendorZip != value))
				{
					this.OnVendorZipChanging(value);
					this.SendPropertyChanging();
					this._VendorZip = value;
					this.SendPropertyChanged("VendorZip");
					this.OnVendorZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorCountry", DbType="VarChar(70)")]
		public string VendorCountry
		{
			get
			{
				return this._VendorCountry;
			}
			set
			{
				if ((this._VendorCountry != value))
				{
					this.OnVendorCountryChanging(value);
					this.SendPropertyChanging();
					this._VendorCountry = value;
					this.SendPropertyChanged("VendorCountry");
					this.OnVendorCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorPhone", DbType="VarChar(40)")]
		public string VendorPhone
		{
			get
			{
				return this._VendorPhone;
			}
			set
			{
				if ((this._VendorPhone != value))
				{
					this.OnVendorPhoneChanging(value);
					this.SendPropertyChanging();
					this._VendorPhone = value;
					this.SendPropertyChanged("VendorPhone");
					this.OnVendorPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorFax", DbType="VarChar(40)")]
		public string VendorFax
		{
			get
			{
				return this._VendorFax;
			}
			set
			{
				if ((this._VendorFax != value))
				{
					this.OnVendorFaxChanging(value);
					this.SendPropertyChanging();
					this._VendorFax = value;
					this.SendPropertyChanged("VendorFax");
					this.OnVendorFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorAcct", DbType="VarChar(50)")]
		public string VendorAcct
		{
			get
			{
				return this._VendorAcct;
			}
			set
			{
				if ((this._VendorAcct != value))
				{
					this.OnVendorAcctChanging(value);
					this.SendPropertyChanging();
					this._VendorAcct = value;
					this.SendPropertyChanged("VendorAcct");
					this.OnVendorAcctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorContact", DbType="VarChar(70)")]
		public string VendorContact
		{
			get
			{
				return this._VendorContact;
			}
			set
			{
				if ((this._VendorContact != value))
				{
					this.OnVendorContactChanging(value);
					this.SendPropertyChanging();
					this._VendorContact = value;
					this.SendPropertyChanged("VendorContact");
					this.OnVendorContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorCntInactive", DbType="Bit")]
		public System.Nullable<bool> VendorCntInactive
		{
			get
			{
				return this._VendorCntInactive;
			}
			set
			{
				if ((this._VendorCntInactive != value))
				{
					this.OnVendorCntInactiveChanging(value);
					this.SendPropertyChanging();
					this._VendorCntInactive = value;
					this.SendPropertyChanged("VendorCntInactive");
					this.OnVendorCntInactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorRating", DbType="VarChar(20)")]
		public string VendorRating
		{
			get
			{
				return this._VendorRating;
			}
			set
			{
				if ((this._VendorRating != value))
				{
					this.OnVendorRatingChanging(value);
					this.SendPropertyChanging();
					this._VendorRating = value;
					this.SendPropertyChanged("VendorRating");
					this.OnVendorRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_POLineFact", Storage="_POLineFacts", ThisKey="VendorKey", OtherKey="Vendor")]
		public EntitySet<POLineFact> POLineFacts
		{
			get
			{
				return this._POLineFacts;
			}
			set
			{
				this._POLineFacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.Vendor1 = this;
		}
		
		private void detach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.Vendor1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DimDate")]
	public partial class DimDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DateKey;
		
		private System.DateTime _FullDate;
		
		private string _DateName;
		
		private byte _DayOfWeek;
		
		private string _DayNameOfWeek;
		
		private byte _DayOfMonth;
		
		private short _DayOfYear;
		
		private string _WeekdayWeekend;
		
		private byte _WeekOfYear;
		
		private string _MonthName;
		
		private byte _MonthOfYear;
		
		private char _IsLastDayOfMonth;
		
		private byte _CalendarQuarter;
		
		private short _CalendarYear;
		
		private string _CalendarYearMonth;
		
		private string _CalendarYearQtr;
		
		private byte _FiscalMonthOfYear;
		
		private byte _FiscalQuarter;
		
		private int _FiscalYear;
		
		private string _FiscalYearMonth;
		
		private string _FiscalYearQtr;
		
		private System.Nullable<int> _InsertAuditKey;
		
		private System.Nullable<int> _UpdateAuditKey;
		
		private EntitySet<POLineFact> _POLineFacts;
		
		private EntitySet<POLineFact> _POLineFacts1;
		
		private EntitySet<POLineFact> _POLineFacts2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateKeyChanging(int value);
    partial void OnDateKeyChanged();
    partial void OnFullDateChanging(System.DateTime value);
    partial void OnFullDateChanged();
    partial void OnDateNameChanging(string value);
    partial void OnDateNameChanged();
    partial void OnDayOfWeekChanging(byte value);
    partial void OnDayOfWeekChanged();
    partial void OnDayNameOfWeekChanging(string value);
    partial void OnDayNameOfWeekChanged();
    partial void OnDayOfMonthChanging(byte value);
    partial void OnDayOfMonthChanged();
    partial void OnDayOfYearChanging(short value);
    partial void OnDayOfYearChanged();
    partial void OnWeekdayWeekendChanging(string value);
    partial void OnWeekdayWeekendChanged();
    partial void OnWeekOfYearChanging(byte value);
    partial void OnWeekOfYearChanged();
    partial void OnMonthNameChanging(string value);
    partial void OnMonthNameChanged();
    partial void OnMonthOfYearChanging(byte value);
    partial void OnMonthOfYearChanged();
    partial void OnIsLastDayOfMonthChanging(char value);
    partial void OnIsLastDayOfMonthChanged();
    partial void OnCalendarQuarterChanging(byte value);
    partial void OnCalendarQuarterChanged();
    partial void OnCalendarYearChanging(short value);
    partial void OnCalendarYearChanged();
    partial void OnCalendarYearMonthChanging(string value);
    partial void OnCalendarYearMonthChanged();
    partial void OnCalendarYearQtrChanging(string value);
    partial void OnCalendarYearQtrChanged();
    partial void OnFiscalMonthOfYearChanging(byte value);
    partial void OnFiscalMonthOfYearChanged();
    partial void OnFiscalQuarterChanging(byte value);
    partial void OnFiscalQuarterChanged();
    partial void OnFiscalYearChanging(int value);
    partial void OnFiscalYearChanged();
    partial void OnFiscalYearMonthChanging(string value);
    partial void OnFiscalYearMonthChanged();
    partial void OnFiscalYearQtrChanging(string value);
    partial void OnFiscalYearQtrChanged();
    partial void OnInsertAuditKeyChanging(System.Nullable<int> value);
    partial void OnInsertAuditKeyChanged();
    partial void OnUpdateAuditKeyChanging(System.Nullable<int> value);
    partial void OnUpdateAuditKeyChanged();
    #endregion
		
		public DimDate()
		{
			this._POLineFacts = new EntitySet<POLineFact>(new Action<POLineFact>(this.attach_POLineFacts), new Action<POLineFact>(this.detach_POLineFacts));
			this._POLineFacts1 = new EntitySet<POLineFact>(new Action<POLineFact>(this.attach_POLineFacts1), new Action<POLineFact>(this.detach_POLineFacts1));
			this._POLineFacts2 = new EntitySet<POLineFact>(new Action<POLineFact>(this.attach_POLineFacts2), new Action<POLineFact>(this.detach_POLineFacts2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DateKey
		{
			get
			{
				return this._DateKey;
			}
			set
			{
				if ((this._DateKey != value))
				{
					this.OnDateKeyChanging(value);
					this.SendPropertyChanging();
					this._DateKey = value;
					this.SendPropertyChanged("DateKey");
					this.OnDateKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullDate", DbType="Date NOT NULL")]
		public System.DateTime FullDate
		{
			get
			{
				return this._FullDate;
			}
			set
			{
				if ((this._FullDate != value))
				{
					this.OnFullDateChanging(value);
					this.SendPropertyChanging();
					this._FullDate = value;
					this.SendPropertyChanged("FullDate");
					this.OnFullDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateName", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string DateName
		{
			get
			{
				return this._DateName;
			}
			set
			{
				if ((this._DateName != value))
				{
					this.OnDateNameChanging(value);
					this.SendPropertyChanging();
					this._DateName = value;
					this.SendPropertyChanged("DateName");
					this.OnDateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeek", DbType="TinyInt NOT NULL")]
		public byte DayOfWeek
		{
			get
			{
				return this._DayOfWeek;
			}
			set
			{
				if ((this._DayOfWeek != value))
				{
					this.OnDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeek = value;
					this.SendPropertyChanged("DayOfWeek");
					this.OnDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayNameOfWeek", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string DayNameOfWeek
		{
			get
			{
				return this._DayNameOfWeek;
			}
			set
			{
				if ((this._DayNameOfWeek != value))
				{
					this.OnDayNameOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DayNameOfWeek = value;
					this.SendPropertyChanged("DayNameOfWeek");
					this.OnDayNameOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfMonth", DbType="TinyInt NOT NULL")]
		public byte DayOfMonth
		{
			get
			{
				return this._DayOfMonth;
			}
			set
			{
				if ((this._DayOfMonth != value))
				{
					this.OnDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._DayOfMonth = value;
					this.SendPropertyChanged("DayOfMonth");
					this.OnDayOfMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfYear", DbType="SmallInt NOT NULL")]
		public short DayOfYear
		{
			get
			{
				return this._DayOfYear;
			}
			set
			{
				if ((this._DayOfYear != value))
				{
					this.OnDayOfYearChanging(value);
					this.SendPropertyChanging();
					this._DayOfYear = value;
					this.SendPropertyChanged("DayOfYear");
					this.OnDayOfYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekdayWeekend", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string WeekdayWeekend
		{
			get
			{
				return this._WeekdayWeekend;
			}
			set
			{
				if ((this._WeekdayWeekend != value))
				{
					this.OnWeekdayWeekendChanging(value);
					this.SendPropertyChanging();
					this._WeekdayWeekend = value;
					this.SendPropertyChanged("WeekdayWeekend");
					this.OnWeekdayWeekendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekOfYear", DbType="TinyInt NOT NULL")]
		public byte WeekOfYear
		{
			get
			{
				return this._WeekOfYear;
			}
			set
			{
				if ((this._WeekOfYear != value))
				{
					this.OnWeekOfYearChanging(value);
					this.SendPropertyChanging();
					this._WeekOfYear = value;
					this.SendPropertyChanged("WeekOfYear");
					this.OnWeekOfYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthName", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MonthName
		{
			get
			{
				return this._MonthName;
			}
			set
			{
				if ((this._MonthName != value))
				{
					this.OnMonthNameChanging(value);
					this.SendPropertyChanging();
					this._MonthName = value;
					this.SendPropertyChanged("MonthName");
					this.OnMonthNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthOfYear", DbType="TinyInt NOT NULL")]
		public byte MonthOfYear
		{
			get
			{
				return this._MonthOfYear;
			}
			set
			{
				if ((this._MonthOfYear != value))
				{
					this.OnMonthOfYearChanging(value);
					this.SendPropertyChanging();
					this._MonthOfYear = value;
					this.SendPropertyChanged("MonthOfYear");
					this.OnMonthOfYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLastDayOfMonth", DbType="NChar(1) NOT NULL")]
		public char IsLastDayOfMonth
		{
			get
			{
				return this._IsLastDayOfMonth;
			}
			set
			{
				if ((this._IsLastDayOfMonth != value))
				{
					this.OnIsLastDayOfMonthChanging(value);
					this.SendPropertyChanging();
					this._IsLastDayOfMonth = value;
					this.SendPropertyChanged("IsLastDayOfMonth");
					this.OnIsLastDayOfMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarQuarter", DbType="TinyInt NOT NULL")]
		public byte CalendarQuarter
		{
			get
			{
				return this._CalendarQuarter;
			}
			set
			{
				if ((this._CalendarQuarter != value))
				{
					this.OnCalendarQuarterChanging(value);
					this.SendPropertyChanging();
					this._CalendarQuarter = value;
					this.SendPropertyChanged("CalendarQuarter");
					this.OnCalendarQuarterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarYear", DbType="SmallInt NOT NULL")]
		public short CalendarYear
		{
			get
			{
				return this._CalendarYear;
			}
			set
			{
				if ((this._CalendarYear != value))
				{
					this.OnCalendarYearChanging(value);
					this.SendPropertyChanging();
					this._CalendarYear = value;
					this.SendPropertyChanged("CalendarYear");
					this.OnCalendarYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarYearMonth", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CalendarYearMonth
		{
			get
			{
				return this._CalendarYearMonth;
			}
			set
			{
				if ((this._CalendarYearMonth != value))
				{
					this.OnCalendarYearMonthChanging(value);
					this.SendPropertyChanging();
					this._CalendarYearMonth = value;
					this.SendPropertyChanged("CalendarYearMonth");
					this.OnCalendarYearMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarYearQtr", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CalendarYearQtr
		{
			get
			{
				return this._CalendarYearQtr;
			}
			set
			{
				if ((this._CalendarYearQtr != value))
				{
					this.OnCalendarYearQtrChanging(value);
					this.SendPropertyChanging();
					this._CalendarYearQtr = value;
					this.SendPropertyChanged("CalendarYearQtr");
					this.OnCalendarYearQtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalMonthOfYear", DbType="TinyInt NOT NULL")]
		public byte FiscalMonthOfYear
		{
			get
			{
				return this._FiscalMonthOfYear;
			}
			set
			{
				if ((this._FiscalMonthOfYear != value))
				{
					this.OnFiscalMonthOfYearChanging(value);
					this.SendPropertyChanging();
					this._FiscalMonthOfYear = value;
					this.SendPropertyChanged("FiscalMonthOfYear");
					this.OnFiscalMonthOfYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalQuarter", DbType="TinyInt NOT NULL")]
		public byte FiscalQuarter
		{
			get
			{
				return this._FiscalQuarter;
			}
			set
			{
				if ((this._FiscalQuarter != value))
				{
					this.OnFiscalQuarterChanging(value);
					this.SendPropertyChanging();
					this._FiscalQuarter = value;
					this.SendPropertyChanged("FiscalQuarter");
					this.OnFiscalQuarterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalYear", DbType="Int NOT NULL")]
		public int FiscalYear
		{
			get
			{
				return this._FiscalYear;
			}
			set
			{
				if ((this._FiscalYear != value))
				{
					this.OnFiscalYearChanging(value);
					this.SendPropertyChanging();
					this._FiscalYear = value;
					this.SendPropertyChanged("FiscalYear");
					this.OnFiscalYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalYearMonth", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string FiscalYearMonth
		{
			get
			{
				return this._FiscalYearMonth;
			}
			set
			{
				if ((this._FiscalYearMonth != value))
				{
					this.OnFiscalYearMonthChanging(value);
					this.SendPropertyChanging();
					this._FiscalYearMonth = value;
					this.SendPropertyChanged("FiscalYearMonth");
					this.OnFiscalYearMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalYearQtr", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string FiscalYearQtr
		{
			get
			{
				return this._FiscalYearQtr;
			}
			set
			{
				if ((this._FiscalYearQtr != value))
				{
					this.OnFiscalYearQtrChanging(value);
					this.SendPropertyChanging();
					this._FiscalYearQtr = value;
					this.SendPropertyChanged("FiscalYearQtr");
					this.OnFiscalYearQtrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertAuditKey", DbType="Int")]
		public System.Nullable<int> InsertAuditKey
		{
			get
			{
				return this._InsertAuditKey;
			}
			set
			{
				if ((this._InsertAuditKey != value))
				{
					this.OnInsertAuditKeyChanging(value);
					this.SendPropertyChanging();
					this._InsertAuditKey = value;
					this.SendPropertyChanged("InsertAuditKey");
					this.OnInsertAuditKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateAuditKey", DbType="Int")]
		public System.Nullable<int> UpdateAuditKey
		{
			get
			{
				return this._UpdateAuditKey;
			}
			set
			{
				if ((this._UpdateAuditKey != value))
				{
					this.OnUpdateAuditKeyChanging(value);
					this.SendPropertyChanging();
					this._UpdateAuditKey = value;
					this.SendPropertyChanged("UpdateAuditKey");
					this.OnUpdateAuditKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimDate_POLineFact", Storage="_POLineFacts", ThisKey="DateKey", OtherKey="DueDate")]
		public EntitySet<POLineFact> POLineFacts
		{
			get
			{
				return this._POLineFacts;
			}
			set
			{
				this._POLineFacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimDate_POLineFact1", Storage="_POLineFacts1", ThisKey="DateKey", OtherKey="InvoiceDate")]
		public EntitySet<POLineFact> POLineFacts1
		{
			get
			{
				return this._POLineFacts1;
			}
			set
			{
				this._POLineFacts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DimDate_POLineFact2", Storage="_POLineFacts2", ThisKey="DateKey", OtherKey="OrderDate")]
		public EntitySet<POLineFact> POLineFacts2
		{
			get
			{
				return this._POLineFacts2;
			}
			set
			{
				this._POLineFacts2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.DimDate = this;
		}
		
		private void detach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.DimDate = null;
		}
		
		private void attach_POLineFacts1(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.DimDate1 = this;
		}
		
		private void detach_POLineFacts1(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.DimDate1 = null;
		}
		
		private void attach_POLineFacts2(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.DimDate2 = this;
		}
		
		private void detach_POLineFacts2(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.DimDate2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CompName;
		
		private string _CompAddress1;
		
		private string _CompAddress2;
		
		private string _CompAddress3;
		
		private string _CompCity;
		
		private string _CompState;
		
		private string _CompZip;
		
		private string _CompCountry;
		
		private string _CompPhone;
		
		private string _CompFax;
		
		private EntitySet<POLineFact> _POLineFacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompNameChanging(string value);
    partial void OnCompNameChanged();
    partial void OnCompAddress1Changing(string value);
    partial void OnCompAddress1Changed();
    partial void OnCompAddress2Changing(string value);
    partial void OnCompAddress2Changed();
    partial void OnCompAddress3Changing(string value);
    partial void OnCompAddress3Changed();
    partial void OnCompCityChanging(string value);
    partial void OnCompCityChanged();
    partial void OnCompStateChanging(string value);
    partial void OnCompStateChanged();
    partial void OnCompZipChanging(string value);
    partial void OnCompZipChanged();
    partial void OnCompCountryChanging(string value);
    partial void OnCompCountryChanged();
    partial void OnCompPhoneChanging(string value);
    partial void OnCompPhoneChanged();
    partial void OnCompFaxChanging(string value);
    partial void OnCompFaxChanged();
    #endregion
		
		public Address()
		{
			this._POLineFacts = new EntitySet<POLineFact>(new Action<POLineFact>(this.attach_POLineFacts), new Action<POLineFact>(this.detach_POLineFacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this.OnCompNameChanging(value);
					this.SendPropertyChanging();
					this._CompName = value;
					this.SendPropertyChanged("CompName");
					this.OnCompNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompAddress1", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string CompAddress1
		{
			get
			{
				return this._CompAddress1;
			}
			set
			{
				if ((this._CompAddress1 != value))
				{
					this.OnCompAddress1Changing(value);
					this.SendPropertyChanging();
					this._CompAddress1 = value;
					this.SendPropertyChanged("CompAddress1");
					this.OnCompAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompAddress2", DbType="VarChar(70)")]
		public string CompAddress2
		{
			get
			{
				return this._CompAddress2;
			}
			set
			{
				if ((this._CompAddress2 != value))
				{
					this.OnCompAddress2Changing(value);
					this.SendPropertyChanging();
					this._CompAddress2 = value;
					this.SendPropertyChanged("CompAddress2");
					this.OnCompAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompAddress3", DbType="VarChar(70)")]
		public string CompAddress3
		{
			get
			{
				return this._CompAddress3;
			}
			set
			{
				if ((this._CompAddress3 != value))
				{
					this.OnCompAddress3Changing(value);
					this.SendPropertyChanging();
					this._CompAddress3 = value;
					this.SendPropertyChanged("CompAddress3");
					this.OnCompAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompCity", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string CompCity
		{
			get
			{
				return this._CompCity;
			}
			set
			{
				if ((this._CompCity != value))
				{
					this.OnCompCityChanging(value);
					this.SendPropertyChanging();
					this._CompCity = value;
					this.SendPropertyChanged("CompCity");
					this.OnCompCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompState", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string CompState
		{
			get
			{
				return this._CompState;
			}
			set
			{
				if ((this._CompState != value))
				{
					this.OnCompStateChanging(value);
					this.SendPropertyChanging();
					this._CompState = value;
					this.SendPropertyChanged("CompState");
					this.OnCompStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompZip", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string CompZip
		{
			get
			{
				return this._CompZip;
			}
			set
			{
				if ((this._CompZip != value))
				{
					this.OnCompZipChanging(value);
					this.SendPropertyChanging();
					this._CompZip = value;
					this.SendPropertyChanged("CompZip");
					this.OnCompZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompCountry", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string CompCountry
		{
			get
			{
				return this._CompCountry;
			}
			set
			{
				if ((this._CompCountry != value))
				{
					this.OnCompCountryChanging(value);
					this.SendPropertyChanging();
					this._CompCountry = value;
					this.SendPropertyChanged("CompCountry");
					this.OnCompCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompPhone", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string CompPhone
		{
			get
			{
				return this._CompPhone;
			}
			set
			{
				if ((this._CompPhone != value))
				{
					this.OnCompPhoneChanging(value);
					this.SendPropertyChanging();
					this._CompPhone = value;
					this.SendPropertyChanged("CompPhone");
					this.OnCompPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompFax", DbType="VarChar(40)")]
		public string CompFax
		{
			get
			{
				return this._CompFax;
			}
			set
			{
				if ((this._CompFax != value))
				{
					this.OnCompFaxChanging(value);
					this.SendPropertyChanging();
					this._CompFax = value;
					this.SendPropertyChanged("CompFax");
					this.OnCompFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_POLineFact", Storage="_POLineFacts", ThisKey="Id", OtherKey="ShipTo")]
		public EntitySet<POLineFact> POLineFacts
		{
			get
			{
				return this._POLineFacts;
			}
			set
			{
				this._POLineFacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_POLineFacts(POLineFact entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
	}
}
#pragma warning restore 1591
